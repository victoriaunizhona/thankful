{"version":3,"sources":["components/ui/divider/Divider.js","components/ui/divider/Divider.module.css","assets/To-do.svg","assets/not-found.svg","containers/history/History.module.css","components/thank-card/ThankCard.js","components/confirm-dialog/ConfirmDialog.js","containers/history/History.js"],"names":["Divider","className","cssStyles","DivDot","DivTransparent","join","module","exports","useStyles","makeStyles","root","width","marginBottom","title","fontSize","button","color","ThankCard","props","classes","Card","variant","CardContent","Typography","gutterBottom","component","format","Date","date","List","aria-label","list","map","item","index","ListItem","ListItemIcon","ListItemText","primary","CardActions","Button","onClick","clicked","size","ConfirmDialog","children","open","setOpen","onConfirm","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogActions","History","useState","items","setItems","loading","setLoading","authContext","useContext","AuthContext","selectedDate","setSelectedDate","confirmOpen","setConfirmOpen","selectedItem","setSelectedItem","showSuccessAlert","setSuccessAlert","useEffect","queryParam","user","idToken","uid","axios","get","then","res","formattedItems","dataForDay","Object","entries","data","filter","dateA","dateB","toDateString","length","keyItem","dataItems","key","Container","maxWidth","Image","src","toDo","alt","MainText","utils","DateFnsUtils","disableToolbar","margin","label","value","onChange","KeyboardButtonProps","Alert","severity","CircularProgress","Loader","NotFound","NotFoundImage","notFound","delete","console","log","setTimeout"],"mappings":"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","file":"static/js/5.a598fb21.chunk.js","sourcesContent":["import React from \"react\";\r\nimport cssStyles from './Divider.module.css';\r\n\r\n\r\n\r\nconst Divider = () => {\r\n    return (\r\n        <div  className={[cssStyles.DivDot, cssStyles.Divider, cssStyles.DivTransparent].join(' ')}/>\r\n    );\r\n};\r\n\r\nexport default Divider;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Divider\":\"Divider_Divider__1C07F\",\"DivTransparent\":\"Divider_DivTransparent__24Okg\",\"DivDot\":\"Divider_DivDot__334Hg\"};","export default __webpack_public_path__ + \"static/media/To-do.cd6b0011.svg\";","export default __webpack_public_path__ + \"static/media/not-found.594b1624.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"History\":\"History_History__3Ob0o\",\"Image\":\"History_Image__3PcZP\",\"MainText\":\"History_MainText__3GXAR\",\"Container\":\"History_Container__3lZr1\",\"Loader\":\"History_Loader__39xcB\",\"NotFound\":\"History_NotFound__3jKyJ\",\"NotFoundImage\":\"History_NotFoundImage__1YHWU\"};","import React from \"react\";\r\nimport cssStyles from './ThankCard.module.css'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport { format} from 'date-fns'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n        marginBottom: '2rem',\r\n    },\r\n    title: {\r\n        fontSize: 14\r\n    },\r\n    button: {\r\n        color: 'darkred'\r\n    }\r\n});\r\n\r\n\r\nconst ThankCard = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root} variant=\"outlined\">\r\n            <CardContent>\r\n                <Typography\r\n                    className={classes.title}\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                >\r\n                    Thankful\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                    {format(new Date(props?.date), 'dd/MM/yyyy')\r\n                    }\r\n                </Typography>\r\n                <List component=\"nav\" aria-label=\"secondary mailbox folders\">\r\n                    {\r\n                        props?.list?.map((item, index) => (\r\n                            <ListItem key={index}>\r\n                                <ListItemIcon>\r\n                                    <DoneIcon color=\"secondary\" />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={item} />\r\n                            </ListItem>\r\n                        ) )\r\n                    }\r\n                </List>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button onClick={props.clicked} className={classes.button}  size=\"medium\">\r\n                    Remove\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ThankCard;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst ConfirmDialog = (props) => {\r\n    const {title, children, open, setOpen, onConfirm} = props;\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={() => setOpen(false)}\r\n            aria-labelledby=\"confirm-dialog\"\r\n        >\r\n            <DialogTitle id=\"confirm-dialog\">{title}</DialogTitle>\r\n            <DialogContent>{children}</DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    onClick={() => setOpen(false)}\r\n                    color=\"secondary\"\r\n                >\r\n                    No\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    onClick={() => {\r\n                        setOpen(false);\r\n                        onConfirm();\r\n                    }}\r\n                    color=\"default\"\r\n                >\r\n                    Yes\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\nexport default ConfirmDialog;\r\n","import React, {useContext, useEffect, useState} from \"react\";\r\nimport {CircularProgress, Container} from '@material-ui/core';\r\nimport cssStyles from './History.module.css'\r\nimport axios from '../../axios-main';\r\nimport {AuthContext} from '../../context/auth-context';\r\nimport ThankCard from '../../components/thank-card/ThankCard'\r\nimport toDo from '../../assets/To-do.svg';\r\nimport notFound from '../../assets/not-found.svg';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport Divider from '../../components/ui/divider/Divider';\r\nimport ConfirmDialog from '../../components/confirm-dialog/ConfirmDialog'\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n\r\nconst areDatesTheSame = (dateA, dateB) => new Date(dateA).toDateString() === new Date(dateB).toDateString();\r\n\r\n\r\nconst History = () => {\r\n    const [items, setItems] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const authContext = useContext(AuthContext);\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n    const [confirmOpen, setConfirmOpen] = useState(false);\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n    const [showSuccessAlert, setSuccessAlert] = useState(false);\r\n\r\n    const deleteItem = (item, key) => {\r\n        setConfirmOpen(true);\r\n        setSelectedItem({item, key});\r\n    }\r\n\r\n    const deleteItemHandler = () => {\r\n        axios.delete(`/thank-list/${selectedItem?.key}.json?auth=${authContext?.user?.idToken}`).then(() => {\r\n            setSuccessAlert(true);\r\n            console.log('deleted');\r\n            setItems(null);\r\n            setTimeout(()=>  setSuccessAlert(false), 1500)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const queryParam = '?auth=' + authContext?.user?.idToken + '&orderBy=\"userId\"&equalTo=\"' + authContext?.user?.uid + '\"';\r\n        axios.get(\"thank-list.json\" + queryParam).then(res => {\r\n            const dataForDay = Object.entries(res?.data)?.filter(([key, items]) => areDatesTheSame(items.date, selectedDate))[0]\r\n\r\n            let formattedItems;\r\n\r\n            if(dataForDay?.length){\r\n                const keyItem = dataForDay[0];\r\n                const dataItems = dataForDay[1];\r\n                formattedItems = <ThankCard key={dataItems.date} date={dataItems.date} list={dataItems.data} clicked={() => deleteItem(dataItems, keyItem)}/>;\r\n\r\n            }\r\n\r\n            setItems(formattedItems)\r\n            setLoading(false);\r\n        })\r\n    }, [authContext?.user?.idToken, authContext?.user?.uid, selectedDate])\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\">\r\n            <div className={cssStyles.Container}>\r\n                <img className={cssStyles.Image} src={toDo} alt=\"logo\"/>\r\n                <div className={cssStyles.MainText}>\r\n                <h1>History</h1>\r\n                <p>Please select a date to see your thanks</p>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            label=\"Select date\"\r\n                            value={selectedDate}\r\n                            onChange={(date)=> setSelectedDate(date)}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                </div>\r\n            </div>\r\n\r\n            <Divider/>\r\n            {\r\n                showSuccessAlert &&\r\n\r\n                <Alert variant=\"outlined\" severity=\"success\">\r\n                    The record was successfully removed\r\n                </Alert>\r\n            }\r\n            {\r\n              loading ?   <CircularProgress className={cssStyles.Loader} color=\"secondary\" /> :\r\n                  <div className={cssStyles.History}>\r\n                     {items || <div className={cssStyles.NotFound}>\r\n                           <img className={cssStyles.NotFoundImage} src={notFound} alt=\"logo\"/>\r\n                         <h2>Nothing found for this date</h2>\r\n                       </div>\r\n                      }\r\n                   </div>\r\n            }\r\n            <ConfirmDialog\r\n                title=\"Delete record\"\r\n                open={confirmOpen}\r\n                setOpen={setConfirmOpen}\r\n                onConfirm={deleteItemHandler}\r\n            >\r\n                Are you sure you want to delete this record?\r\n            </ConfirmDialog>\r\n        </Container>\r\n\r\n    );\r\n};\r\n\r\nexport default History;\r\n"],"sourceRoot":""}